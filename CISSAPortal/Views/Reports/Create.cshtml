@model IdentitySample.Models.Report

@{
    ViewBag.Title = "Ввод нового отчета";
}

<h2>Ввод нового отчета</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Отчет о распределении гум. помощи</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group visible-lg-inline-block">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group visible-lg-inline-block">
            @Html.LabelFor(model => model.Quarter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quarter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quarter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group visible-lg-inline-block">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.HumDistributionPlanId)
    </div>
    <table class="table table-striped table-bordered table-hover table-condensed">
        <thead>
            <tr>
                <th colspan="8" class="text-center">
                    По плану
                </th>
                <th colspan="2" class="text-center">
                    Остаток на начало отчетного периода
                </th>
                <th colspan="2" class="text-center">
                    Фактически
                </th>
                <th colspan="2" class="text-center">
                    Остаток на конец отчетного периода
                </th>
            </tr>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.UnitType.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.Consumer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.Region)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.Weight)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReportItems.First().HumDistributionPlanItem.Sum)
                </th>
                <th>
                    Кол-во
                </th>
                <th>
                    Сумма
                </th>
                <th>
                    Кол-во
                </th>
                <th>
                    Сумма
                </th>
                <th>
                    Кол-во
                </th>
                <th>
                    Сумма
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ReportItems)
            {
                <tr data-itemid="@item.HumDistributionPlanItemId">
                    <td>
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.UnitType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.Consumer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.Region)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.ProductName)
                    </td>
                    <td class="plan_amount">
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.Amount)
                    </td>
                    <td class="plan_weight">
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.Weight)
                    </td>
                    <td class="plan_sum">
                        @Html.DisplayFor(modelItem => item.HumDistributionPlanItem.Sum)
                    </td>
                    <td>
                        <input type="number" class="form-control prev_balance_amount" disabled />
                    </td>
                    <td>
                        <input type="number" class="form-control prev_balance_sum" disabled />
                    </td>
                    <td>
                        <input type="number" class="form-control fact_amount" />
                    </td>
                    <td>
                        <input type="number" class="form-control fact_sum" />
                    </td>
                    <td>
                        <input type="number" class="form-control balance_amount" disabled />
                    </td>
                    <td>
                        <input type="number" class="form-control balance_sum" disabled />
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Создать" id="Create" class="btn btn-primary" />
        </div>
    </div>
                }

<div>
    @Html.ActionLink("Отмена", "Index")
</div>
@section styles{
    @Styles.Render("~/Content/jquery-ui-css")
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <script>
        var prev_report_initializer =
            {
                init: function () {
                    prev_report_initializer.getPrevReportItems();
                },
                getPrevReportItems: function () {
                    $.getJSON('/Reports/GetPrevReportItems?planId=' + $('#HumDistributionPlanId').val(), function (data) {
                        if (data.result) {
                            if (data.items != null && data.items.length) {
                                $(data.items).each(function () {
                                    var item = this;
                                    var planItemId = item.HumDistributionPlanItemId;
                                    $('tr[data-itemid="' + planItemId + '"] input.prev_balance_amount').val(item.BalanceAmount);
                                    $('tr[data-itemid="' + planItemId + '"] input.prev_balance_sum').val(item.BalanceSum);
                                });
                            }
                        }
                        else {
                            alert(data.message);
                        }
                    });
                }
            };
        $(function () {
            $("#Date").datepicker();
            prev_report_initializer.init();
            $(document).delegate('.fact_amount', 'change', function (e) {
                var row = $(this).closest('tr');
                var planAmount = $('.plan_amount', row).html();
                var factAmount = parseInt($(this).val());
                var prev_balance_amount = parseFloat($('.prev_balance_amount', row).val());
                if (prev_balance_amount > 0)
                    planAmount = prev_balance_amount;
                if (factAmount >= 0) {
                    $('.balance_amount', row).val(planAmount - factAmount);
                }
                else {
                    $(this).val(null);
                }
            });
            $(document).delegate('.fact_sum', 'change', function (e) {
                var row = $(this).closest('tr');
                var plansum = $('.plan_sum', row).html();
                var factsum = parseFloat($(this).val());
                var prev_balance_sum = parseFloat($('.prev_balance_sum', row).val());
                if (prev_balance_sum > 0)
                    plansum = prev_balance_sum;
                if (factsum >= 0) {
                    $('.balance_sum', row).val(plansum - factsum);
                }
                else {
                    $(this).val(null);
                }
            });

            $('#Create').on('click', function (e) {
                e.preventDefault();
                
                var report = {
                    Year: $('#Year').val(),
                    Quarter: $('#Quarter').val(),
                    UserId: $('#UserId').val(),
                    HumDistributionPlanId: $('#HumDistributionPlanId').val(),
                    Date: $('#Date').val()
                };
                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    type: 'POST',
                    url: '/Reports/CreateReport',
                    data: JSON.stringify({ 'report': report }),
                    success: function (res) {
                        if (res.result == 'success') {
                            report = res.report;
                            var items = [];
                            $('tbody tr').each(function () {
                                var row = $(this);
                                var planItemId = row.attr('data-itemid');
                                var fact_amount = parseInt($('td input.fact_amount', row).val());
                                var fact_sum = parseFloat($('td input.fact_sum', row).val());
                                //if (fact_amount > 0 || fact_sum > 0) {
                                    var balance_amount = parseInt($('td input.balance_amount', row).val());
                                    var balance_sum = parseFloat($('td input.balance_sum', row).val());
                                    var item =
                                        {
                                            ReportId: report.Id,
                                            FactAmount: fact_amount,
                                            FactSum: fact_sum,
                                            BalanceAmount: balance_amount,
                                            BalanceSum: balance_sum,
                                            HumDistributionPlanItemId: planItemId
                                        };
                                    items.push(item);
                                //}
                            });

                            $.ajax({
                                contentType: 'application/json; charset=utf-8',
                                dataType: 'json',
                                type: 'POST',
                                url: '/Reports/CreateItems',
                                data: JSON.stringify({ 'items': items }),
                                success: function (res) {
                                    if (res.result == 'success') {
                                        location.href = '/Reports/Details/' + report.Id;
                                    }
                                    else {
                                        alert(res.message);
                                    }
                                },
                                failure: function (response) {
                                    alert(response);
                                }
                            });
                        }
                        else {
                            alert(res.message);
                        }
                    },
                    failure: function (response) {
                        alert(response);
                    }
                });
            });
        });
    </script>
}
