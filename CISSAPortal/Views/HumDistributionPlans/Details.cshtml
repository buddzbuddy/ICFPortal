@model IdentitySample.Models.HumDistributionPlan

@{
    ViewBag.Title = "План распределения гум. помощи";
}

<h2>Просмотр</h2>

<div>
    <h4>План распределения гум. помощи</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Company.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Company.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrencyISOCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrencyISOCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrencyRate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrencyRate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrencyRateDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrencyRateDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State.Name)
        </dt>

        <dd>
            @if (Model.State == null)
            {
                <div class="alert alert-warning">@Html.ActionLink("Отправить в министерство ТСР", "SetState", new { reportId = Model.Id, code = 1 }, new { @class = "btn btn-info" }) | @Html.ActionLink("Отправить в ДЛО МЗКР", "SetState", new { reportId = Model.Id, code = 4 }, new { @class = "btn btn-info" })</div>
                @*if (Model.Items.Any(x => x.Product.IsMedical))
                {
                    <div class="alert alert-warning">@Html.ActionLink("Отправить в ДЛО МЗКР", "SetState", new { reportId = Model.Id, code = 4 }, new { @class = "btn btn-info" })</div>
                }*@
            }
            else if (Model.State.Code == 1)
            {
                <div class="alert alert-info">@Html.DisplayFor(model => model.State.Name) @*| @Html.ActionLink("Принять", "SetState", new { reportId = Model.Id, code = 2 }, new { @class = "btn btn-success" }) | @Html.ActionLink("Возвратить", "SetState", new { reportId = Model.Id, code = 3 }, new { @class = "btn btn-danger" })*@</div>
            }
            else if (Model.State.Code == 2)
            {
                <div class="alert alert-success">@Html.DisplayFor(model => model.State.Name) (@Html.DisplayNameFor(model => model.CertificateNo) @Html.DisplayFor(model => model.CertificateNo), @Html.DisplayNameFor(model => model.CertificateDate) @Html.DisplayFor(model => model.CertificateDate)) @*| @Html.ActionLink("Возвратить", "SetState", new { reportId = Model.Id, code = 3 }, new { @class = "btn btn-danger" })*@</div>
            }
            else if (Model.State.Code == 3)
            {
                <div class="alert alert-danger">@Html.DisplayFor(model => model.State.Name)
            @if (User.IsInRole("HumRecipient"))
                {
                    @Html.ActionLink("Отправить в министерство ТСР", "SetState", new { reportId = Model.Id, code = 1 }, new { @class = "btn btn-info" }) <text>|</text> @Html.ActionLink("Отправить в ДЛО МЗКР", "SetState", new { reportId = Model.Id, code = 4 }, new { @class = "btn btn-info" })
                }
            </div>
            }
            else if (Model.State.Code == 4)
            {
                <div class="alert alert-warning">@Html.DisplayFor(model => model.State.Name)
                @if (User.IsInRole("DLO"))
                {
                    @Html.ActionLink("Утвердить и отправить в министерство ТСР", "SetState", new { reportId = Model.Id, code = 1 }, new { @class = "btn btn-info" }) <text>|</text> @Html.ActionLink("Возвратить на доработку", "Return", new { planId = Model.Id }, new { @class = "btn btn-danger" })
                }</div>
            }
        </dd>
    </dl>
    @if (User.IsInRole("HumRecipient"))
    {
        <a class="btn btn-info pull-right" href="@Url.Action("GetFile", "HumDistributionPlans", new { PlanId = Model.Id})"><span class="glyphicon glyphicon-print"></span> Распечатать</a>
    }
    
    <table class="table table-striped table-bordered table-hover table-condensed" id="HumDistributionPlan">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Consumer.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Area.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Product.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().UnitType.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Sum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().ConvertedSum)
                    @if (Model.CurrencyRate.HasValue && Model.CurrencyRateDate.HasValue)
                    {
                        <text>(по курсу <i>@(Math.Round(Model.CurrencyRate.Value, 2))</i> от <i>@(Model.CurrencyRateDate.Value.ToShortDateString())</i>)</text>
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr class="@(item.HumDistributionPlanItemChanges.Count > 0 ? "text-danger" : "")">
                    <td>
                        @Html.ActionLink("изменить", "EditRow", new { planItemId = item.Id }, new { @class = "editItemBtn" })
                        @Html.DisplayFor(modelItem => item.Consumer.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Area.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConvertedSum)
                    </td>
                </tr>
            }
            <tr style="font-weight:bold;">
                <td colspan="5" align="right">
                    Итого:
                </td>
                <td>
                    @Model.Items.Sum(x => x.Amount).Value.ToString("# ### ### ##0.0")
                </td>
                <td>
                    @Model.Items.Sum(x => x.Sum).Value.ToString("# ### ### ##0.0")
                </td>
                <td>
                    @(Math.Round(Model.Items.Sum(x => x.ConvertedSum) ?? 0, 2).ToString("# ### ### ##0.0"))
                </td>
            </tr>
        </tbody>
    </table>
    <br />
    @if (User.IsInRole("HumRecipient"))
    {
        @Html.ActionLink("Добавить скан документа", "AddAttachment", new { planId = Model.Id }, new { @class = "btn btn-primary" })
    }
    <table class="table table-bordered">
        <thead>
            <tr>
                <th colspan="3" class="text-center text-info">Сканы документов</th>
            </tr>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Attachments.First().AttachmentType.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Attachments.First().FileSize)
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Attachments)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => item.AttachmentType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.FileSize)
                    </td>
                    <td>
                        <a href="@Url.Action("GetAttachment", new { id = item.Id })" title="Скачать" data-toggle="tooltip" target="_blank"><span class="glyphicon glyphicon-download-alt"></span></a>
                        @if (User.IsInRole("HumRecipient"))
                        {
                            <text>|</text>
                            <a href="@Url.Action("DeleteAttachment", new { id = item.Id })" title="Удалить" data-toggle="tooltip"><span class="glyphicon glyphicon-remove"></span></a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <br />
    @if (User.IsInRole("HumRecipient"))
    {
        if (Model.Returns.Count > 0)
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th colspan="2" class="text-center text-info">Возвраты</th>
                    </tr>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Returns.First().ReturnedDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Returns.First().Comments)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Returns)
                    {
                        <tr class="text-danger">
                            <td>
                                @Html.DisplayFor(model => item.ReturnedDate)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Comments)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
    <br />
    @if (Model.PlanStates.Count > 0)
    {
        int state_i = Model.PlanStates.Count;
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th colspan="3" class="text-center text-info">История статусов документа</th>
                </tr>
                <tr>
                    <th>#</th>
                    <th>
                        @Html.DisplayNameFor(model => model.PlanStates.First().DocumentState.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PlanStates.First().StateDate)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PlanStates.OrderByDescending(x => x.Id))
                {
                    <tr class="text-muted @(item.DocumentState.Code == 1 ? "info" : item.DocumentState.Code == 2 ? "success" : item.DocumentState.Code == 3 ? "danger" : "warning")">
                        <td>
                            @state_i
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DocumentState.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.StateDate)
                        </td>
                    </tr>
                    state_i--;
                }
            </tbody>
        </table>
    }
    <br />
    @if (User.IsInRole("HumRecipient"))
    {
        @Html.ActionLink("Ввести отчет", "Create", "Reports", new { HumDistributionPlanId = Model.Id }, new { @class = "btn btn-primary" })
    }
    @if (Model.Reports.Count > 0)
    {
        Html.RenderAction("ReportListPartial", "Reports", new { planId = Model.Id });
    }
</div>
<p>
    <a href="javascript://" onclick="window.history.back()">Назад</a>
</p>
<div class="modal fade" id="edit-modal-form">
    <div class="modal-header">
        <a class="close" data-dismiss="modal">&times;</a>
    </div>
    <div class="modal-body">
        <p>Body of the form</p>
    </div>
    <div class="modal-footer">
        <a href="#" class="btn" data-dismiss="modal">Закрыть</a>
        <a href="#" class="btn btn-primary saveModal" data-field="">Сохранить</a>
    </div>
</div>

<div class="modal fade" id="modal-form">
    <div class="modal-header">
        <a class="close" data-dismiss="modal">&times;</a>
    </div>
    <div class="modal-body">
        <p>Body of the form</p>
    </div>
    <div class="modal-footer">
        <a href="#" class="btn" data-dismiss="modal">Закрыть</a>
        <a href="#" class="btn btn-primary saveModal" data-field="">Сохранить</a>
    </div>
</div>
@section styles{
    @Styles.Render("~/chosen_v1.8.2/css")
    <style>
        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
        }

        .modal.fade.in {
            left: 25%;
            right: 25%;
            border: 1px solid white;
            bottom: auto;
            top: 20%;
            background: #fff;
            border-radius: 5px;
        }
        #edit-modal-form.modal.fade.in {
            left: 15%;
            right: 15%;
            height: 500px;
        }
        #edit-modal-form .modal-body {
            overflow-x: auto;
            overflow-y: auto;
            height: 350px;
        }
        .chosen-container {
            width: 100% !important;
        }
    </style>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/chosen_v1.8.2/js")
    <script>
        $(function () {
            $(".editItem").click(function () {
                $.ajax({
                    url: this.href,
                    cache: false,
                    success: function (html) {
                        $("#editorRows").append(html);
                        initRow();
                    }
                });
                return false;
            });
            $(document).delegate("a.deleteRow", "click", function (e) {
                e.preventDefault();
                $(this).closest("tr").remove();
                return false;
            });
            
            //Default Save Event Listener for savings in Modal
            $(document).delegate('#modal-form .saveModal', 'click', function (e) {
                e.preventDefault();
                saveAndUpdateChosenModal();
            });
            $(document).delegate('#modal-form form', 'submit', function (e) {
                e.preventDefault();
                saveAndUpdateChosenModal();
            });

            //Default Save Event Listener for EditRowSaving in Modal
            $(document).delegate('#edit-modal-form .saveModal', 'click', function (e) {
                e.preventDefault();
                saveEditModal();
            });
            $(document).delegate('#edit-modal-form form', 'submit', function (e) {
                e.preventDefault();
                saveEditModal();
            });

            //Edit item in Modal dialog
            $(document).delegate('a.editItemBtn', 'click', function (e) {
                e.preventDefault();
                openEditModal(this.href);
            });

            //Add New Consumer in Modal dialog
            $(document).delegate('.addConsumerBtn', 'click', function (e) {
                //e.preventDefault();
                openNewModal('@Url.Action("Create", "Consumers")', $('select', $(this).closest('td')).attr('id'));
            });

            //Add New Product in Modal dialog
            $(document).delegate('.addProductBtn', 'click', function (e) {
                //e.preventDefault();
                openNewModal('@Url.Action("Create", "Products")', $('select', $(this).closest('td')).attr('id'));
            });

        });
        function openEditModal(url) {
            $.get(url, function (data) {
                $('#edit-modal-form .modal-body').html(data);
                initRow();
                $('#edit-modal-form').modal('show');
            });
        }
        function openNewModal(url, fieldId) {

            $.get(url, function (data) {
                $('#modal-form .modal-body').html(data);
                $('#modal-form .modal-footer .saveModal').attr('data-field', fieldId);
            });
        }
        function saveEditModal() {
            var data = $('#edit-modal-form form').serialize();
            $.ajax({
                type: 'POST',
                url: $('#edit-modal-form form').attr('action'),
                data: data,
                success: function (data) {
                    if (data.success) {
                        window.location.reload();
                        $('#edit-modal-form').modal('hide');
                    }
                    else {
                        bs_alert(data.error);
                    }
                },
                error: function (response) {
                    bs_alert(response);
                }
            });
        }

        function saveAndUpdateChosenModal() {
            $.ajax({
                type: 'POST',
                url: $('#modal-form form').attr('action'),
                data: $('#modal-form form').serialize(),
                success: function (data) {
                    if (data.error == null) {
                        appendToChosen($('#modal-form .saveModal').attr('data-field'), data.Id, data.Name);
                        $('#modal-form').modal('hide');
                    }
                    else {
                        bs_alert(data.error);
                    }
                },
                error: function (response) {
                    bs_alert(response);
                }
            });
        }
        function initRow() {
            $('.chosen-select').chosen({ no_results_text: "Не найдено:", allow_single_deselect: true });
        }
        function appendToChosen(fieldId, val, text) {
            $('#' + fieldId)
                .append($('<option></option>')
                    .val(val)
                    .attr('selected', 'selected')
                    .html(text)).trigger('chosen:updated');
            $('#' + fieldId).chosen('destroy');
            $('#' + fieldId).chosen();
        }
    </script>
}
